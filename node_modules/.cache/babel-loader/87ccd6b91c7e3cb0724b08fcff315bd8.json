{"remainingRequest":"/home/nash/Vue Js/vue-atm-machine/node_modules/babel-loader/lib/index.js!/home/nash/Vue Js/vue-atm-machine/node_modules/eslint-loader/index.js??ref--13-0!/home/nash/Vue Js/vue-atm-machine/src/store/index.js","dependencies":[{"path":"/home/nash/Vue Js/vue-atm-machine/src/store/index.js","mtime":1628015890153},{"path":"/home/nash/Vue Js/vue-atm-machine/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/nash/Vue Js/vue-atm-machine/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/nash/Vue Js/vue-atm-machine/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IFZ1ZSBmcm9tICJ2dWUiOwppbXBvcnQgVnVleCBmcm9tICJ2dWV4IjsKaW1wb3J0IHsgc2V0VG9rZW4gYXMgX3NldFRva2VuLCBnZXRUb2tlbiwgcmVtb3ZlVG9rZW4gfSBmcm9tICIuLi91dGlscy9sb2NhbC1zdG9yYWdlIjsKaW1wb3J0IHJhbmRvbUlkIGZyb20gIi4uL3V0aWxzL3JhbmRvbS1pZCI7CmltcG9ydCByb3V0ZXIgZnJvbSAiLi4vcm91dGVyL2luZGV4IjsKVnVlLnVzZShWdWV4KTsKZXhwb3J0IGRlZmF1bHQgbmV3IFZ1ZXguU3RvcmUoewogIHN0YXRlOiB7fSwKICBnZXR0ZXJzOiB7fSwKICBhY3Rpb25zOiB7fSwKICBtdXRhdGlvbnM6IHt9LAogIG1vZHVsZXM6IHsKICAgIGF1dGg6IHsKICAgICAgLy8gbmFtZXNwYWNlZDogdHJ1ZSwKICAgICAgc3RhdGU6IHsKICAgICAgICB0b2tlbjogZ2V0VG9rZW4oKQogICAgICB9LAogICAgICBnZXR0ZXJzOiB7CiAgICAgICAgaXNBdXRoZW50aWNhdGVkOiBmdW5jdGlvbiBpc0F1dGhlbnRpY2F0ZWQoc3RhdGUpIHsKICAgICAgICAgIHJldHVybiBCb29sZWFuKHN0YXRlLnRva2VuKTsKICAgICAgICB9CiAgICAgIH0sCiAgICAgIGFjdGlvbnM6IHsKICAgICAgICBsb2dpbjogZnVuY3Rpb24gbG9naW4oX3JlZikgewogICAgICAgICAgdmFyIGNvbW1pdCA9IF9yZWYuY29tbWl0OwogICAgICAgICAgY29tbWl0KCJzZXRUb2tlbiIsIHJhbmRvbUlkKCkpOwogICAgICAgIH0sCiAgICAgICAgbG9nb3V0OiBmdW5jdGlvbiBsb2dvdXQoX3JlZjIpIHsKICAgICAgICAgIHZhciBjb21taXQgPSBfcmVmMi5jb21taXQ7CiAgICAgICAgICByZW1vdmVUb2tlbigpOwogICAgICAgICAgY29tbWl0KCJzZXRUb2tlbiIsICIiKTsKICAgICAgICAgIHJvdXRlci5wdXNoKCIvbG9naW4iKTsKICAgICAgICB9CiAgICAgIH0sCiAgICAgIG11dGF0aW9uczogewogICAgICAgIHNldFRva2VuOiBmdW5jdGlvbiBzZXRUb2tlbihzdGF0ZSwgcGF5bG9hZCkgewogICAgICAgICAgX3NldFRva2VuKHBheWxvYWQpOwoKICAgICAgICAgIHN0YXRlLnRva2VuID0gcGF5bG9hZDsKICAgICAgICB9CiAgICAgIH0KICAgIH0sCiAgICB1c2VyOiB7fQogIH0KfSk7"},{"version":3,"sources":["/home/nash/Vue Js/vue-atm-machine/src/store/index.js"],"names":["Vue","Vuex","setToken","getToken","removeToken","randomId","router","use","Store","state","getters","actions","mutations","modules","auth","token","isAuthenticated","Boolean","login","commit","logout","push","payload","user"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,SAASC,QAAQ,IAARA,SAAT,EAAmBC,QAAnB,EAA6BC,WAA7B,QAAgD,wBAAhD;AACA,OAAOC,QAAP,MAAqB,oBAArB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AAEAN,GAAG,CAACO,GAAJ,CAAQN,IAAR;AAEA,eAAe,IAAIA,IAAI,CAACO,KAAT,CAAe;AAC5BC,EAAAA,KAAK,EAAE,EADqB;AAE5BC,EAAAA,OAAO,EAAE,EAFmB;AAG5BC,EAAAA,OAAO,EAAE,EAHmB;AAI5BC,EAAAA,SAAS,EAAE,EAJiB;AAK5BC,EAAAA,OAAO,EAAE;AACPC,IAAAA,IAAI,EAAE;AACJ;AACAL,MAAAA,KAAK,EAAE;AACLM,QAAAA,KAAK,EAAEZ,QAAQ;AADV,OAFH;AAKJO,MAAAA,OAAO,EAAE;AACPM,QAAAA,eADO,2BACSP,KADT,EACgB;AACrB,iBAAOQ,OAAO,CAACR,KAAK,CAACM,KAAP,CAAd;AACD;AAHM,OALL;AAUJJ,MAAAA,OAAO,EAAE;AACPO,QAAAA,KADO,uBACW;AAAA,cAAVC,MAAU,QAAVA,MAAU;AAChBA,UAAAA,MAAM,CAAC,UAAD,EAAad,QAAQ,EAArB,CAAN;AACD,SAHM;AAIPe,QAAAA,MAJO,yBAIY;AAAA,cAAVD,MAAU,SAAVA,MAAU;AACjBf,UAAAA,WAAW;AACXe,UAAAA,MAAM,CAAC,UAAD,EAAa,EAAb,CAAN;AACAb,UAAAA,MAAM,CAACe,IAAP,CAAY,QAAZ;AACD;AARM,OAVL;AAoBJT,MAAAA,SAAS,EAAE;AACTV,QAAAA,QADS,oBACAO,KADA,EACOa,OADP,EACgB;AACvBpB,UAAAA,SAAQ,CAACoB,OAAD,CAAR;;AACAb,UAAAA,KAAK,CAACM,KAAN,GAAcO,OAAd;AACD;AAJQ;AApBP,KADC;AA4BPC,IAAAA,IAAI,EAAE;AA5BC;AALmB,CAAf,CAAf","sourcesContent":["import Vue from \"vue\";\nimport Vuex from \"vuex\";\nimport { setToken, getToken, removeToken } from \"../utils/local-storage\";\nimport randomId from \"../utils/random-id\";\nimport router from \"../router/index\";\n\nVue.use(Vuex);\n\nexport default new Vuex.Store({\n  state: {},\n  getters: {},\n  actions: {},\n  mutations: {},\n  modules: {\n    auth: {\n      // namespaced: true,\n      state: {\n        token: getToken()\n      },\n      getters: {\n        isAuthenticated(state) {\n          return Boolean(state.token);\n        }\n      },\n      actions: {\n        login({ commit }) {\n          commit(\"setToken\", randomId());\n        },\n        logout({ commit }) {\n          removeToken();\n          commit(\"setToken\", \"\");\n          router.push(\"/login\");\n        }\n      },\n      mutations: {\n        setToken(state, payload) {\n          setToken(payload);\n          state.token = payload;\n        }\n      }\n    },\n    user: {}\n  }\n});\n"]}]}