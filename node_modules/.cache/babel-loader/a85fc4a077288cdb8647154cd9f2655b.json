{"remainingRequest":"/home/nash/Vue Js/vue-atm-machine/node_modules/babel-loader/lib/index.js!/home/nash/Vue Js/vue-atm-machine/node_modules/eslint-loader/index.js??ref--13-0!/home/nash/Vue Js/vue-atm-machine/src/guards/auth.js","dependencies":[{"path":"/home/nash/Vue Js/vue-atm-machine/src/guards/auth.js","mtime":1628015890153},{"path":"/home/nash/Vue Js/vue-atm-machine/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/nash/Vue Js/vue-atm-machine/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/nash/Vue Js/vue-atm-machine/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHJvdXRlciBmcm9tICIuLi9yb3V0ZXIvaW5kZXgiOwppbXBvcnQgc3RvcmUgZnJvbSAiLi4vc3RvcmUvaW5kZXgiOwpyb3V0ZXIuYmVmb3JlRWFjaChmdW5jdGlvbiAodG8sIF8sIG5leHQpIHsKICB2YXIgaXNBdW50aGVudGljYXRlZCA9IHN0b3JlLmdldHRlcnNbImlzQXV0aGVudGljYXRlZCJdOyAvLyBEZXRlcm1pbmUgd2hldGhlciB0aGUgdXNlciBoYXMgbG9nZ2VkIGluCgogIGlmICghaXNBdW50aGVudGljYXRlZCkgewogICAgaWYgKHRvLnBhdGggPT09ICIvbG9naW4iKSB7CiAgICAgIG5leHQoKTsKICAgIH0gZWxzZSB7CiAgICAgIG5leHQoIi9sb2dpbiIpOwogICAgfQogIH0KCiAgaWYgKGlzQXVudGhlbnRpY2F0ZWQpIHsKICAgIGlmICh0by5wYXRoID09PSAiL2xvZ2luIikgewogICAgICBuZXh0KCIvIik7CiAgICB9IGVsc2UgewogICAgICBuZXh0KCk7CiAgICB9CiAgfQp9KTs="},{"version":3,"sources":["/home/nash/Vue Js/vue-atm-machine/src/guards/auth.js"],"names":["router","store","beforeEach","to","_","next","isAunthenticated","getters","path"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,iBAAnB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AAEAD,MAAM,CAACE,UAAP,CAAkB,UAACC,EAAD,EAAKC,CAAL,EAAQC,IAAR,EAAiB;AACjC,MAAMC,gBAAgB,GAAGL,KAAK,CAACM,OAAN,CAAc,iBAAd,CAAzB,CADiC,CAEjC;;AACA,MAAI,CAACD,gBAAL,EAAuB;AACrB,QAAIH,EAAE,CAACK,IAAH,KAAY,QAAhB,EAA0B;AACxBH,MAAAA,IAAI;AACL,KAFD,MAEO;AACLA,MAAAA,IAAI,CAAC,QAAD,CAAJ;AACD;AACF;;AAED,MAAIC,gBAAJ,EAAsB;AACpB,QAAIH,EAAE,CAACK,IAAH,KAAY,QAAhB,EAA0B;AACxBH,MAAAA,IAAI,CAAC,GAAD,CAAJ;AACD,KAFD,MAEO;AACLA,MAAAA,IAAI;AACL;AACF;AACF,CAlBD","sourcesContent":["import router from \"../router/index\";\nimport store from \"../store/index\";\n\nrouter.beforeEach((to, _, next) => {\n  const isAunthenticated = store.getters[\"isAuthenticated\"];\n  // Determine whether the user has logged in\n  if (!isAunthenticated) {\n    if (to.path === \"/login\") {\n      next();\n    } else {\n      next(\"/login\");\n    }\n  }\n\n  if (isAunthenticated) {\n    if (to.path === \"/login\") {\n      next(\"/\");\n    } else {\n      next();\n    }\n  }\n});\n"]}]}